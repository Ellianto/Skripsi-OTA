This TODO will explain the steps required to setup the Raspberry Pi as Gateway/Controller 
~tested with Raspberry Pi 3 Model B+ running Raspbian Buster 2020-02-13

Source : https://raspberrypi.stackexchange.com/questions/89803/access-point-as-wifi-router-repeater-optional-with-bridge
along with https://raspberrypi.stackexchange.com/questions/108592/use-systemd-networkd-for-general-networking/108593#108593

* Run updates, and reboot before starting any config

    >$ sudo su
    >$ apt update && apt full-upgrade
    >$ reboot

* Ensure the required python apt packages are installed and pointed to correctly! (this system uses Python 3.7)

    >$ sudo su
    >$ apt-get install python3.7 python3-pip python3-venv  

* To login as root at boot, edit this line at /lib/systemd/system/getty@.service

    Change:
        ExecStart=-/sbin/getty/ --noclear %I $TERM 

    Into:
        ExecStart=-/sbin/getty/ --noclear -a root %I $TERM

    Remove root password if necessary

    >$ sudo nano /etc/passwd
    
    Make sure that there are no 'x' at the line that specifies the root account

* Also, sometimes the RFKill might just prevent the wireless interface from connecting

    >$ sudo su
    >$ ifconfig #check whether the wireless interface is in up status
    >$ rfkill list # Check whether the wireless interface is soft blocked or not

    If it is softblocked:

    >$ rfkill unblock wifi
    >$ rfkill list #check again
    >$ ifconfig [interface_name, usually wlan0] up 

* From here on, everything will be run as root

1. run "raspi-config"
2. Update the raspi-config tool
3. Change "pi" user password to "teknik_komputer"
4. Change device hostname to "raspberrypi-[gw/ed]-[2 digit number]"
5. Set predictable interface names
6. Activate SSH (just in case)
8. Configure network settings to use systemd-networkd

    >$ sudo su 

    a. Remove Classic Debian networking tools (dhcpcd, ifupdown)
        >$ apt --autoremove purge ifupdown dhcpcd5 isc-dhcp-client isc-dhcp-common rsyslog avahi-daemon
        >$ rm -r /etc/network/ /etc/dhcp/

    b. Enable systemd-networkd and systemd-resolved
        >$ systemctl enable systemd-networkd.service
        >$ systemctl enable systemd-resovled.service

    c. Configure systemd-resolved interfaces for network name resolution
        >$ apt install -y libnss-resolve
        >$ ln -sf /run/systemd/resolve/stub-resolv.conf /etc/resolv.conf

    d. Also, configure this to prevent DNSSEC failure

        >$ nano /etc/systemd/resolved.conf

        Edit it so it looks like this:

            [Resolve]
            DNS=8.8.8.8
            FallbackDNS=1.1.1.1
            #Domains=
            LLMNR=yes
            MulticastDNS=yes
            DNSSEC=no
            #DNSOverTLS=no
            #Cache=yes
            DNSStubListener=yes
            ReadEtcHosts=yes

        >$ systemctl restart systemd-resolved.service
        >$ systemctl status systemd-resolved.service

        *Also, it would seem like we need to run systemctl daemon-reload everytime resolved is startec
        *Simply, we can run the command on every boot by adding the command to /etc/rc.local

        >$ sudo nano /etc/rc.local

        Append "sudo systemctl daemon-reload" before the exit 0 command

    e. Make sure D-Bus software interface is running
        >$ systemctl status dbus.service

    f. Setup static interface for WiFi Client and reboot

        >$ mv /etc/wpa_supplicant/wpa_supplicant.conf /etc/wpa_supplicant/wpa_supplicant-wlan0.conf
        >$ systemctl disable wpa_supplicant.service
        >$ systemctl enable wpa_supplicant@wlan0.service

        >$ nano /etc/systemd/network/08-wlan0.network # prompts an empty text editor

        Append the text below to the new file: (continuation of step 8e)

            [Match]
            Name=wlan0
            [Network]
            IPForward=yes
            DHCP=yes
            MulticastDNS=yes

        >$ reboot

    g. Check with this command and verify that it matches the config in step d
        >$ resolvectl status

    Failure in fully migrating might mess with the name resolution 

** Make sure RPi can connect to network properly up to this point (Gets DHCP Address, can ping to 8.8.8.8 and 1.1.1.1 without problem)

9. Install and start hostapd

    >$ apt-get install hostapd -y
    >$ systemctl unmask hostapd
    >$ systemctl enable hostapd

10. Setup hostapd for Access Point (replace the parameters in square brackets with the appropriate value)
    note: check the channel used in wlan0 or whatever wireless interface is currently connected to internet

    >$ iwlist channel  # Check the appropriate interface, and look at the Current Frequency Channel value
    >$ nano /etc/hostapd/hostapd.conf

    fill it with these details:

        interface=ap0
        driver=nl80211
        ssid=[your_ap_ssid_here]
        country_code=ID
        hw_mode=g
        channel=[insert_channel_value]
        auth_algs=1
        wpa=2
        wpa_passphrase=[your_ap_password]
        wpa_key_mgmt=WPA-PSK
        wpa_pairwise=TKIP
        rsn_pairwise=CCMP

    >$ chmod 600 /etc/hostapd/hostapd.conf
    >$ sed -i 's/^#DAEMON_CONF=.*$/DAEMON_CONF="\/etc\/hostapd\/hostapd.conf"/' /etc/default/hostapd
    >$ systemctl --full edit hostapd.service 

    The last command will prompt a text editor. Comment the "After=network.target" line by appending
    a # at the beginning of the line. Save and exit.

    >$ systemctl edit hostapd.service

    This will also prompt a text editor, but to an empty text. Add these lines to the text:

        [Unit]
        Wants=wpa_supplicant@wlan0.service

        [Service]
        ExecStartPre=/sbin/iw dev wlan0 interface add ap0 type __ap
        ExecStopPost=-/sbin/iw dev ap0 del

11. Setup wpa_supplicant.conf (this is a continuation of step 8f)

    >$ chmod 600 /etc/wpa_supplicant/wpa_supplicant-wlan0.conf
    >$ rfkill unblock 0
    >$ systemctl edit wpa_supplicant@wlan0.service

    The last command will prompt a text editor showing an empty file. Append these:

        [Unit]
        BindsTo=hostapd.service
        After=hostapd.service

        [Service]
        ExecStartPost=/sbin/iptables -t nat -A POSTROUTING -o wlan0 -j MASQUERADE
        ExecStopPost=-/sbin/iptables -t nat -D POSTROUTING -o wlan0 -j MASQUERADE

12. Setup static interface for AP and reboot

    >$ nano /etc/systemd/network/12-ap0.network # prompts an empty text editor

    Append the text below to the new file:

        [Match]
        Name=ap0
        [Network]
        Address=192.168.66.1/24 # Fill this with the Address for AP0. It will also be the address pool for the clients
        DHCPServer=yes
        [DHCPServer]
        DNS=84.200.69.80 1.1.1.1 8.8.8.8

    >$ reboot